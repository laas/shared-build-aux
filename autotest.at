#                                                                -*-Autoconf-*-
# Copyright (C) 2009 by Thomas Moulard, AIST, CNRS, INRIA.
# This file is part of the roboptim.
#
# roboptim is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Additional permission under section 7 of the GNU General Public
# License, version 3 ("GPLv3"):
#
# If you convey this file as part of a work that contains a
# configuration script generated by Autoconf, you may do so under
# terms of your choice.
#
# roboptim is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with roboptim.  If not, see <http://www.gnu.org/licenses/>.

# serial 1

m4_pattern_forbid([^CHECK_STDOUT])


# CHECK_STDOUT(BINARY, [DESCRIPTION],
#              [SKIP_EXPR = false], [XFAIL_EXPR = false])
# --------------------------------------------------------------
# Check against a ``.stdout'' file.
# If the binary can not be built, the test is skipped.
# BINARY: the binary that has to be runned.
# DESCRIPTION: test's description.
# SKIP_EXPR: if shell expression evalutes to true, skip test.
# XFAIL_EXPR: if shell expression evalutes to true, tag test as xfail.
m4_define([CHECK_STDOUT],
[m4_ifset ([$1], [],
           [m4_fatal([CHECK_STDOUT has be called with at least one argument])])
AT_SETUP([m4_default([$2], [Unnamed test])])

AT_CHECK([if m4_default([$3], [false]); then
 exit 77; else
 true; fi], [0], [ignore], [ignore])

AT_XFAIL_IF([m4_default([$4], [false])])
cp $abs_srcdir/$1.stdout expout
AT_CHECK([$CHECK_PREFIX `which $1`], [0], [expout], [ignore])

AT_CLEANUP
]) # CHECK_STDOUT


# CHECK_STDOUT_SKIP(BINARY, [DESCRIPTION], [XFAIL_EXPR])
# --------------------------------------------------------------
# Do a CHECK_STDOUT if the BINARY exists (is in the path).
m4_define([CHECK_STDOUT_SKIPPABLE],
[CHECK_STDOUT([$1], [$2], [test x`which $1` = x], [$3])
]) # CHECK_STDOUT_SKIP

# End of autotest.at
